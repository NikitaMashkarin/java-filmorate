CREATE TABLE IF NOT EXISTS Users (
    user_id  INTEGER AUTO_INCREMENT,
    email    CHARACTER VARYING(50) NOT NULL,
    login    CHARACTER VARYING(50) NOT NULL,
    name     CHARACTER VARYING(50),
    birthday DATE,
    CONSTRAINT USERS_PK PRIMARY KEY (user_id)
);

CREATE TABLE IF NOT EXISTS Rating (
    rating_id INTEGER GENERATED BY DEFAULT AS IDENTITY (EXHAUSTED),
    rating    VARCHAR(10) NOT NULL,
    CONSTRAINT RATING_PK PRIMARY KEY (rating_id)
);

CREATE TABLE IF NOT EXISTS Genre (
    genre_id INTEGER AUTO_INCREMENT,
    genre    CHARACTER VARYING(20) NOT NULL,
    CONSTRAINT GENRE_PK PRIMARY KEY (genre_id)
);

CREATE TABLE IF NOT EXISTS Films (
    film_id       INTEGER AUTO_INCREMENT,
    name          CHARACTER VARYING(50) NOT NULL,
    description   CHARACTER VARYING(200) NOT NULL,
    releaseDate   DATE NOT NULL,
    duration      INTEGER NOT NULL,
    rating_id     INTEGER NOT NULL,
    CONSTRAINT FILMS_PK PRIMARY KEY (film_id),
    CONSTRAINT FILMS_FK FOREIGN KEY (rating_id) REFERENCES Rating (rating_id)
);

CREATE TABLE IF NOT EXISTS Friends (
    user_id           INTEGER NOT NULL,
    friend_id         INTEGER NOT NULL,
    friendship_status BOOLEAN DEFAULT FALSE NOT NULL,
    CONSTRAINT USER_ID_FK FOREIGN KEY (user_id) REFERENCES Users (user_id),
    CONSTRAINT FRIEND_ID_FK FOREIGN KEY (friend_id) REFERENCES Users (user_id)
);

CREATE TABLE IF NOT EXISTS Genre_film (
    film_id  INTEGER NOT NULL,
    genre_id INTEGER NOT NULL,
    CONSTRAINT FILM_TO_GENRE_FILMS_FK FOREIGN KEY (film_id) REFERENCES Films (film_id),
    CONSTRAINT FILM_TO_GENRE_GENRE_FK FOREIGN KEY (genre_id) REFERENCES Genre (genre_id)
);

CREATE TABLE IF NOT EXISTS Likes (
    user_id INTEGER NOT NULL,
    film_id INTEGER NOT NULL,
    CONSTRAINT USER_LIKE_FILM_USERS_ID_FK FOREIGN KEY (user_id) REFERENCES Users (user_id),
    CONSTRAINT USER_LIKE_FILM_FILMS_ID_FK FOREIGN KEY (film_id) REFERENCES Films (film_id)
);
